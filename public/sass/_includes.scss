$accent: #56B4D3;
$highlight: lighten(#348F50, 20%);
$complement: $highlight;
$body: darken(desaturate($accent, 40%),25%);

html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,progress,video{display:inline-block;vertical-align:baseline;}audio:not([controls]){display:none;height:0;}[hidden],template{display:none;}a{background:transparent;}a:active,a:hover{outline:0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:bold;}dfn{font-style:italic;}h1{font-size:2em;margin:0.67em 0;}mark{background:#ff0;color:#000;}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-0.5em;}sub{bottom:-0.25em;}img{border:0;}svg:not(:root){overflow:hidden;}figure{margin:1em 40px;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}pre{overflow:auto;}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em;}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0;}button{overflow:visible;}button,select{text-transform:none;}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}input{line-height:normal;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}textarea{overflow:auto;}optgroup{font-weight:bold;}table{border-collapse:collapse;border-spacing:0;}td,th{padding:0;}



// Transition
@mixin transition($elements:all,$secs:0.5s,$delay:0s) {
	-webkit-transition: $elements $secs ease-in-out $delay;
	-moz-transition: $elements $secs ease-in-out $delay;
	-ms-transition: $elements $secs ease-in-out $delay;
	-o-transition: $elements $secs ease-in-out $delay;
	transition: $elements $secs ease-in-out $delay;
	-webkit-transition-timing-function: cubic-bezier(0.590, 0.005, 0.000, 1.000); /* older webkit */
	-webkit-transition-timing-function: cubic-bezier(0.590, 0.005, 0.000, 1.000);
	   -moz-transition-timing-function: cubic-bezier(0.590, 0.005, 0.000, 1.000);
	    -ms-transition-timing-function: cubic-bezier(0.590, 0.005, 0.000, 1.000);
	     -o-transition-timing-function: cubic-bezier(0.590, 0.005, 0.000, 1.000);
	        transition-timing-function: cubic-bezier(0.590, 0.005, 0.000, 1.000); /* custom */
}

// Animation

@mixin animation($name:myAnim,$secs:0.5s,$delay:0s, $iteration: 1, $direction: normal, $easing: cubic-bezier(0.590, 0.005, 0.000, 1.000)) {
	-webkit-animation: $name $secs $easing $delay $iteration $direction;
	-moz-animation: $name $secs $easing $delay $iteration $direction;
	-ms-animation: $name $secs $easing $delay $iteration $direction;
	-o-animation: $name $secs $easing $delay $iteration $direction;
	animation: $name $secs $easing $delay $iteration $direction;
	-webkit-animation-fill-mode: both;
	-moz-animation-fill-mode: both;
	-ms-animation-fill-mode: both;
	-o-animation-fill-mode: both;
	animation-fill-mode: both;
}

@mixin arrow($width: 20px, $height: 20px, $direction: up, $color: red) { 
	  width: 0;
	  height: 0;

	  // Right
	  @if $direction == right {
	    border-top: $height/2 solid transparent;
	    border-bottom: $height/2 solid transparent;
	    border-left: $width solid $color;
		}
	  // Left
	  @if $direction == left {
	    border-top: $height/2 solid transparent;
	    border-bottom: $height/2 solid transparent;
	    border-right: $width solid $color;
		}
	  // Up
	  @if $direction == up {
	    border-left: $width/2 solid transparent;
	    border-right: $width/2 solid transparent;
	    border-bottom: $height solid $color;
		}
	  // Down
	  @if $direction == down {
	    border-left: $width/2 solid transparent;
	    border-right: $width/2 solid transparent;
	    border-top: $height solid $color;
	    }
   }

// Keyframes
@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
	@content;
	}
	@-moz-keyframes #{$name} {
	@content;
	}
	@-ms-keyframes #{$name} {
	@content;
	}
	@keyframes #{$name} {
	@content;
	}
}
